---
source: crates/printer/src/operation_type_printer/tests/mod.rs
expression: printed
---
import type { TypedDocumentNode } from "@graphql-typed-document-node/core";
import type * as Schema from "";

type Result = Schema.__SelectionSet<Schema.__OperationOutput.Query, {
  posts: (Schema.__SelectionSet<Schema.__OperationOutput.Post, {
    id: Schema.__OperationOutput.ID;
    tags: (Schema.__OperationOutput.String)[] | null;
    title: Schema.__OperationOutput.String;
  }, {}>)[] | null;
}, {}>;

type Variables = {};

declare const Query: TypedDocumentNode<Result, Variables>;

export { Query as default };

export type F = Schema.__SelectionSet<Schema.__OperationOutput.Query, {
  posts: (Schema.__SelectionSet<Schema.__OperationOutput.Post, {
    id: Schema.__OperationOutput.ID;
    tags: (Schema.__OperationOutput.String)[] | null;
  }, {}>)[] | null;
}, {}>;

export const F: TypedDocumentNode<F, never>;

export type P = Schema.__SelectionSet<Schema.__OperationOutput.Query, {
  posts: (Schema.__SelectionSet<Schema.__OperationOutput.Post, {
    id: Schema.__OperationOutput.ID;
    title: Schema.__OperationOutput.String;
  }, {}>)[] | null;
}, {}>;

export const P: TypedDocumentNode<P, never>;


