---
source: crates/printer/src/operation_type_printer/tests/mod.rs
expression: printed
---
import type { TypedDocumentNode } from "@graphql-typed-document-node/core";
import type * as Schema from "";

type Result = Schema.__SelectionSet<Schema.Query, {
  me: Schema.__SelectionSet<Schema.User, {
    id: Schema.ID;
    name: Schema.String;
    type: Schema.UserType;
    age?: never;
  }, {}> | Schema.__SelectionSet<Schema.User, {
    id: Schema.ID;
    name: Schema.String;
    type: Schema.UserType;
    age: Schema.Int | null;
  }, {}>;
}, {}>;

type Variables = {
  readonly include: Schema.Boolean;
};

declare const Query: TypedDocumentNode<Result, Variables>;

export { Query as default };

export type F = Schema.__SelectionSet<Schema.User, {
  age: Schema.Int | null;
}, {}>;

export const F: TypedDocumentNode<F, never>;


